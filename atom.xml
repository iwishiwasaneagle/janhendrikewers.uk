<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
    <title type="text" xml:lang="en">Jan-Hendrik Ewers</title>
    <link type="application/atom+xml" rel="self" href="https://janhendrikewers.uk/atom.xml"/>
  
  <link href="https://janhendrikewers.uk/"/>
  <id>https://janhendrikewers.uk/</id>
  <updated>2024-03-28T15:14:16Z</updated>
  <author>
    <name>Jan-Hendrik Ewers</name>
    <email>j.ewers.1@research.gla.ac.uk</email>
  </author>
  <rights type="text">Copyright © 2024 Jan-Hendrik Ewers. All rights reserved.</rights>
  
  <entry>
    <title type="text">Optimising Search and Rescue: How Algorithms Could Outperform Human Pilots</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/optimising-search-and-rescue.html/?source=RSS" />
    <id>https://janhendrikewers.uk/optimising-search-and-rescue</id>
    <published>2024-02-23T00:00:00Z</published>
    <updated>2024-02-23T00:00:00Z</updated>
    <content type="html"><![CDATA[ <p><em>This article is a short dive into a recent journal publication of mine titled <a href="https://doi.org/10.1002/adc2.167">Optimal Path Planning Using Psychological Profiling in Drone-assisted Missing Person Search</a>.</em></p>

<hr />

<p>Search and Rescue (SAR) operations are inherently time-sensitive endeavors,
 and this urgency amplifies when it involves locating vulnerable missing individuals like children or elderly people suffering from dementia.
Classic search operations involve hundreds, if not thousands, of man-hours combing landscapes or mind-boggingly expensive helicopters doing the same. This is where the drone steps in. It has the height-advantage of the helicopter without the associated costs. For these reasons,  Scottish Mountain Rescue (SMR) and Police Scotland Air Support Unit (PSASU) have started experimenting with their use within search.</p>

<p>Whilst modern control systems make drones flyable by just about anyone, the route flown given the reduced flight time is highly critical. A more optimal coverage of the area means a higher chance of finding the missing person. This is what we have explored in our recent research; can a computer perform this task? To answer this question we pitted a PSASU pilot versus a computer in a mock SAR mission. Our results show that the computer can outperform a skilled police officer.</p>

<p>Firstly, how does the drone know where to look? This part is done by modelling the probability of finding a missing person at a point by a Probability Distribution Map (PDM). This is quite literally a black and white image, where regions of higher probability are indicated by a lighter colour. <em>Lost person behavior</em> by Rober Koester provides key data-based insights into the physcological profile of a missing person, and how they are likely to behave. This allows us to create the PDM manually by identifying that, for example, a tree is present which a hiker is likely to stop at.</p>

<style>
figure
{
    display: inline-block;
    width: 33%;
    vertical-align:top;
}
</style>

<figure>
    <img src="/static/img/2024-02-23-optimising-search-and-rescue/prob_map_8_jackton_map.png" width="100%" alt="Base-map" />
    <figcaption><i>Satellite image showing a field with trees and bushes. Note that the buildings were off-limits for the testing.</i></figcaption>
</figure>
<figure>
    <img src="/static/img/2024-02-23-optimising-search-and-rescue/prob_map_8_jackton.png" width="100%" alt="PDM" />
    <figcaption><i>An manullay created PDM highlighting the cluster of bushes in the south-east.</i></figcaption>
</figure>
<figure>
    <img src="/static/img/2024-02-23-optimising-search-and-rescue/prob_map_8_jackton_overlay.png" width="100%" alt="PDM overlayed onto base-map" />
    <figcaption><i>The PDM overalyed ontop of the base-map</i></figcaption>
</figure>

<p>The next step is defining the optimisation problem over the area. We do this by rewarding the accumulation of probability under the search footprint. This also discourages revisiting <em>seen</em> areas as there is no new probability to accumulate. Both the genetic algorithm and particle swarm optimisiation were compared against one-another, with Probability Accumulation-based Optimisation Genetic Algorithm (PABO GA) being the winner.</p>

<p class="centre"><img src="/static/img/2024-02-23-optimising-search-and-rescue/paths_ps.png" alt="Flight paths" class="img-responsive" /></p>

<p>In the figure, the flight paths from the test flights can be seen. Two flights were undertaken by the PSASU pilot, and a third that attempted to closely follow a parallel swaths (aka lawnmower) pattern.
The latter was done to demonstrate how hard it is for the pilot to closely follow a predetermined path, rather than simply exploring the area based on intuition.</p>

<p class="centre"><img src="/static/img/2024-02-23-optimising-search-and-rescue/endurance_limited_time-to-find_ps.png" alt="A graph of the results" class="img-responsive" /></p>

<p>Graph above clearly shows how PABO GA has a higher accumulated probability for the majority of the flight. Interstingly, all PSASU paths are very similar when viewed from this probability-based perspective. Even with varying flight times due to endurance limitations, both <em>PS ASU 1</em> and <em>2</em> finish at roughly the same total accumulated probability.</p>

<p>In conclusion, this result is a clear indication that algorithms could improve the time to find a missing person and thus save lives. Whilst the experimental results are not concrete proof that humans are redundent, it does highlight the potential in fully autonomous drones used in real search missions. Future experiments should have a higher number of trials, with tighter coupling of the PDM to the pilot’s intuition.</p>

<h2 id="references">References</h2>

<ol class="bibliography"><li><span id="allen_cairngorm_2019">Allen, J., &amp; Bonington, C. (2019). <i>Cairngorm John: A Life in Mountain Rescue: 10th Anniversary Edition</i>. Sandstone Press Ltd.</span></li>
<li><span id="carrell_flying_2022">Carrell, S. (2022). Flying to the Rescue: Scottish Mountain Teams Are Turning to Drones. <i>The Guardian</i>.</span></li>
<li><span id="ewers_optimal_2023">Ewers, J.-H., Anderson, D., &amp; Thomson, D. (2023). Optimal Path Planning Using Psychological Profiling in Drone-assisted Missing Person Search. <i>Advanced Control for Applications</i>, e167. https://doi.org/10.1002/adc2.167</span></li>
<li><span id="koester_lost_2008">Koester, R. J. (2008). <i>Lost Person Behavior: A Search and Rescue Guide on Where to Look for Land, Air, and Water</i>. dbS Productions.</span></li></ol>
 ]]></content>
  </entry>

  <entry>
    <title type="text">Pydantic 1 vs 2: A Speed Comparison</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/pydantic-1-vs-2-a-benchmark-test.html/?source=RSS" />
    <id>https://janhendrikewers.uk/pydantic-1-vs-2-a-benchmark-test</id>
    <published>2023-08-18T13:49:00Z</published>
    <updated>2023-08-18T13:49:00Z</updated>
    <content type="html"><![CDATA[ <p>Back in 2022 I did <a href="/pydantic_vs_protobuf_vs_namedtuple_vs_dataclasses.html">a comparison of some of the most well known python data class libraries</a> in various categories. In this blog post I came to the conclusion that pydantic was only apt for less performant applications. However, with the release of <a href="https://docs.pydantic.dev/2.0/blog/pydantic-v2-final/">Pydantic v2</a> in late June of 2023 touting 5-50x speed improvements compared to v1 due to a rewrite of the <a href="https://github.com/pydantic/pydantic-core">core logic in Rust</a>.</p>

<p>So in the face of these new claims, lets put it to the test.</p>

<h2 id="experimental-setup">Experimental Setup</h2>

<p>My workload hasn’t changed much since the last post, so I will still have a simulation based approach.</p>

<p>I made two very simple data types. <code class="language-plaintext highlighter-rouge">Coord</code> relies on purely python native types, and <code class="language-plaintext highlighter-rouge">Coords</code> holds a list of the <code class="language-plaintext highlighter-rouge">Coord</code> type.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Coord</span><span class="p">(</span><span class="n">pydantic</span><span class="p">.</span><span class="n">BaseModel</span><span class="p">):</span>
    <span class="n">x</span><span class="p">:</span> <span class="nb">float</span>
    <span class="n">y</span><span class="p">:</span> <span class="nb">float</span>
    <span class="n">z</span><span class="p">:</span> <span class="nb">float</span>
    <span class="n">heading</span><span class="p">:</span> <span class="nb">float</span>
    <span class="n">tag</span><span class="p">:</span> <span class="nb">str</span>
    <span class="n">idx</span><span class="p">:</span> <span class="nb">int</span>

<span class="k">class</span> <span class="nc">Coords</span><span class="p">(</span><span class="n">pydantic</span><span class="p">.</span><span class="n">BaseModel</span><span class="p">):</span>
    <span class="n">coords</span><span class="p">:</span> <span class="nb">list</span><span class="p">[</span><span class="n">Coord</span><span class="p">]</span>
</code></pre></div></div>

<p>We create the $N$ length data using the same seed to ensure it’s an apples for apples comparison across the versions.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">create_data</span><span class="p">(</span><span class="n">N</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="n">seed</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">rng</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">default_rng</span><span class="p">(</span><span class="n">seed</span><span class="o">=</span><span class="n">seed</span><span class="p">)</span>

    <span class="n">positions</span> <span class="o">=</span> <span class="n">rng</span><span class="p">.</span><span class="nf">random</span><span class="p">((</span><span class="n">N</span><span class="p">,</span> <span class="mi">3</span><span class="p">)).</span><span class="nf">astype</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>
    <span class="n">headings</span> <span class="o">=</span> <span class="n">rng</span><span class="p">.</span><span class="nf">random</span><span class="p">(</span><span class="n">N</span><span class="p">).</span><span class="nf">astype</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>
    <span class="n">idxs</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">N</span><span class="p">).</span><span class="nf">astype</span><span class="p">(</span><span class="n">snp</span><span class="p">.</span><span class="n">int32</span><span class="p">)</span>
    <span class="n">tags</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span>
        <span class="nf">map</span><span class="p">(</span>
            <span class="sh">""</span><span class="p">.</span><span class="n">join</span><span class="p">,</span>
            <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="n">string</span><span class="p">.</span><span class="n">ascii_letters</span><span class="p">))[</span>
                <span class="n">rng</span><span class="p">.</span><span class="nf">choice</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">string</span><span class="p">.</span><span class="n">ascii_letters</span><span class="p">),</span> <span class="p">(</span><span class="n">N</span><span class="p">,</span> <span class="mi">100</span><span class="p">))</span>
            <span class="p">],</span>
        <span class="p">)</span>
    <span class="p">)</span>

    <span class="k">return</span> <span class="n">positions</span><span class="p">,</span> <span class="n">headings</span><span class="p">,</span> <span class="n">idxs</span><span class="p">,</span> <span class="n">tags</span>
</code></pre></div></div>

<p>This is then used to instantiate $N$ classes of <code class="language-plaintext highlighter-rouge">Coord</code> which is then used to instantiate one class of <code class="language-plaintext highlighter-rouge">Coords</code> with</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="n">positions</span><span class="p">,</span> <span class="n">headings</span><span class="p">,</span> <span class="n">idxs</span><span class="p">,</span> <span class="n">tags</span><span class="p">):</span>
    <span class="n">coords</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">position</span><span class="p">,</span> <span class="n">heading</span><span class="p">,</span> <span class="n">idx</span><span class="p">,</span> <span class="n">tag</span> <span class="ow">in</span> <span class="nf">zip</span><span class="p">(</span><span class="n">positions</span><span class="p">,</span> <span class="n">headings</span><span class="p">,</span> <span class="n">idxs</span><span class="p">,</span> <span class="n">tags</span><span class="p">):</span>
        <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="n">position</span>
        <span class="n">coords</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nc">Coord</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="o">=</span><span class="n">z</span><span class="p">,</span> <span class="n">heading</span><span class="o">=</span><span class="n">heading</span><span class="p">,</span> <span class="n">idx</span><span class="o">=</span><span class="n">idx</span><span class="p">,</span> <span class="n">tag</span><span class="o">=</span><span class="n">tag</span><span class="p">))</span>
    <span class="k">return</span> <span class="nc">Coords</span><span class="p">(</span><span class="n">coords</span><span class="o">=</span><span class="n">coords</span><span class="p">)</span>
</code></pre></div></div>

<p>Every loop of this function is timed using <a href="https://docs.python.org/3/library/time.html#time.perf_counter_ns"><code class="language-plaintext highlighter-rouge">time.perf_counter_ns</code></a>.</p>

<h2 id="performance">Performance</h2>

<p>We start by comparing the performance from $N=1$ to $N=100$ (with $100$ repeats at every $N$) as seen below in the figure.</p>

<p class="centre"><img src="/static/img/2023-08-18-pydantic-1-vs-2-a-benchmark-test/correct_dtypes.png" alt="Speed comparison of instantiating the Pydantic data classes" class="img-responsive" />
<em>Time taken to instantiate the data classes by Pydantic version</em></p>

<p>Evidently the claims are accurate! <code class="language-plaintext highlighter-rouge">v2.1.1</code> is substantially faster than <code class="language-plaintext highlighter-rouge">v1.10.8</code> over all data points with both seemingly having an $O(n)$ relationship.</p>

<p>To give Pydantic something more to chew on, we’ll feed it data types that it’ll have to convert. We’ll simply pre-emptively convert <code class="language-plaintext highlighter-rouge">float</code> to <code class="language-plaintext highlighter-rouge">int</code> and vise-versa. Not the hardest task in the world but interesting nonetheless as this occurs often in my workflows.</p>

<p class="centre"><img src="/static/img/2023-08-18-pydantic-1-vs-2-a-benchmark-test/incorrect_dtypes.png" alt="Speed comparison of instantiating the Pydantic data classes with incorrect data types" class="img-responsive" />
<em>Time taken to instantiate the data classes by Pydantic version with incorrect (but castable) data types</em></p>

<p>Inpsecting the above graph, this has slightly slowed down both versions but not by much.</p>

<h2 id="final-thoughts">Final Thoughts</h2>

<p>Given that the Pydantic team have taken the time and effort to rewrite the core of the library in Rust, the results are no surprise. With the massive popularity of libraries like <a href="https://fastapi.tiangolo.com/">FastAPI</a> and <a href="https://www.dynaconf.com/release_notes/#coming-in-31x">Dynaconf</a> using Pydantic for core functionality, this performance improvement will help the community massively in the form of saving on compute time. However, for cases where type checking isn’t essential, <code class="language-plaintext highlighter-rouge">namedtuples</code> and <code class="language-plaintext highlighter-rouge">dataclasses</code> are probably still the way to go for raw speed. Nonetheless, I will now consider using Pydantic in more scenarios because of these speed gains and because it’s a bloody brilliant library!</p>

<h2 id="future-work">Future Work?</h2>

<p>I might redo the analysis undertaken in the afformentioned <a href="/pydantic_vs_protobuf_vs_namedtuple_vs_dataclasses.html">previous post</a>, with some more suggestions made by my readers:</p>

<ul>
  <li><a href="https://docs.pydantic.dev/latest/usage/dataclasses/">pydantic-dataclasses</a></li>
  <li><a href="https://atom.readthedocs.io/en/latest/">atom</a></li>
  <li>Custom <a href="https://github.com/pybind/pybind11">pybind11</a> objects</li>
  <li>… ?</li>
</ul>

<p>If this is something you’d be interested in, please let me know in the <a href="#comments">comments</a>!</p>
 ]]></content>
  </entry>

  <entry>
    <title type="text">How To Properly Wipe Your Reddit Account</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/how-to-properly-wipe-your-reddit-account.html/?source=RSS" />
    <id>https://janhendrikewers.uk/how-to-properly-wipe-your-reddit-account</id>
    <published>2023-06-16T09:41:00Z</published>
    <updated>2023-06-16T09:41:00Z</updated>
    <content type="html"><![CDATA[ <p>Reddit recently introduced insane API changes, akin to those introduced by twitter, that are essentially forcing all 3rd party app creators to take down their products. <a href="https://www.reddit.com/r/apolloapp/comments/144f6xm/apollo_will_close_down_on_june_30th_reddits/">Apollo</a> was the first (as far as I am aware) with my personal favourite, <a href="https://www.reddit.com/r/baconreader/">BaconReader</a> also following along. <a href="https://www.forbes.com/sites/antoniopequenoiv/2023/06/13/reddit-stands-by-controversial-api-changes-as-subreddit-protest-continues">Thousands of subreddits partook in a protest</a> but with no sign of the Reddit leadership reversing the changes (or at least adjusting them… paid API isn’t unreasonable!). Therefore, I am going to quit the site (oh no! what will they do without my doom-scrolling) but first I will completely wipe my profile.</p>

<p>The way reddit handles account deletion means that the username is essentially disassociated from the content it has provided. This means that reddit essentially still has all your data on its site. Thus, this quick tutorial will show you how to delete your posts and your comments. After that, you can rest easy knowing that your years of shitposting aren’t going to give reddit another penny.</p>

<h2 id="pre-requisits">Pre-requisits</h2>

<ol>
  <li>You must have the reddit enhancement suite installed
    <ul>
      <li><a href="https://addons.mozilla.org/en-GB/firefox/addon/reddit-enhancement-suite/">Firefox</a></li>
      <li><a href="https://chrome.google.com/webstore/detail/reddit-enhancement-suite/kbmfpngjjgdllneeigpgjifpgocmfgmb">Chrome</a></li>
      <li><a href="https://microsoftedge.microsoft.com/addons/detail/jlhgedjpndhblehblebhncfmkkpngiep">Edge</a></li>
    </ul>
  </li>
  <li>I’m now assuming that you are using the <code class="language-plaintext highlighter-rouge">old.reddit.com</code> site</li>
</ol>

<h2 id="how-to">How-To</h2>

<p>The below works on both the <a href="https://old.reddit.com/user/me/submitted">submitted</a> and <a href="https://old.reddit.com/user/me/comments">comments</a> pages.</p>

<ol>
  <li>Open the developer console with <code class="language-plaintext highlighter-rouge">F12</code></li>
  <li>Paste the following javascript and press enter</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">$delButtons</span> <span class="o">=</span> <span class="nf">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">.del-button .option .yes</span><span class="dl">'</span><span class="p">),</span> <span class="nx">currentTime</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="nx">$delButtons</span><span class="p">.</span><span class="nf">each</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">_this</span> <span class="o">=</span> <span class="nf">$</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
    <span class="nx">currentTime</span> <span class="o">+=</span> <span class="mi">500</span><span class="p">;</span>
    <span class="nf">setTimeout</span><span class="p">(</span>
        <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="nx">_this</span><span class="p">.</span><span class="nf">click</span><span class="p">();</span>
        <span class="p">},</span>
        <span class="nx">currentTime</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">);</span>
</code></pre></div></div>

<p>Once you get to the end of the page, refresh and go again!</p>

<p><strong>Note:</strong> from my experience, older content might take a while to show up. Once you think you have deleted everything, give it a minute and double check!</p>
 ]]></content>
  </entry>

  <entry>
    <title type="text">A Simple Linux Counter</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/a-simple-linux-counter.html/?source=RSS" />
    <id>https://janhendrikewers.uk/a-simple-linux-counter</id>
    <published>2023-05-05T14:54:00Z</published>
    <updated>2023-05-05T14:54:00Z</updated>
    <content type="html"><![CDATA[ <p>I’m currently marking exams digitally. All the questions are merged into a single PDF so I wanted to count how many I had marked without manually going back through. I couldn’t quickly find something on StackOverflow and that’s how this very simple, but effective, counter came to be.</p>

<script src="https://gist.github.com/iwishiwasaneagle/f6ce7445146c222d894372e6a1287540.js"></script>

 ]]></content>
  </entry>

  <entry>
    <title type="text">How To Never Miss The Aurora Borealis Again!</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/how-to-never-miss-the-aurora-borealis-again.html/?source=RSS" />
    <id>https://janhendrikewers.uk/how-to-never-miss-the-aurora-borealis-again</id>
    <published>2023-04-24T16:30:00Z</published>
    <updated>2023-04-24T16:30:00Z</updated>
    <content type="html"><![CDATA[ <p class="center"><strong>You can access the results of this blog <a href="/aurora.html">here</a></strong></p>

<p>I live in Scotland and I have been getting constant messages about the Northern Lights in the sky from my Mum. I <strong>really</strong> want to see them but have to travel out of the city to escape the light polution. I recently discovered that the National Oceanic and Atmospheric Administration (NOAA) have service that provideds up to date Aurora forecasts for both hemispheres:</p>

<ul>
  <li><a href="https://services.swpc.noaa.gov/images/aurora-forecast-northern-hemisphere.jpg">Northern</a></li>
  <li><a href="https://services.swpc.noaa.gov/images/aurora-forecast-southern-hemisphere.jpg">Southern</a></li>
</ul>

<p>This inspired me to make a dynamically updating wallpaper for my desktop. I see this multiple times a day so should never miss another aurora borealis!</p>

<h2 id="the-code">The Code</h2>

<p>This is a really simple website that uses the <code class="language-plaintext highlighter-rouge">background</code> CSS properties to correctly display the image.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;style&gt;</span>
<span class="nt">body</span> <span class="p">{</span>
  <span class="nl">background-image</span><span class="p">:</span> <span class="sx">url('http://services.swpc.noaa.gov/images/aurora-forecast-northern-hemisphere.jpg')</span><span class="p">;</span>
  <span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">no-repeat</span><span class="p">;</span>
  <span class="nl">background-attachment</span><span class="p">:</span> <span class="nb">fixed</span><span class="p">;</span>
  <span class="nl">background-size</span><span class="p">:</span> <span class="n">contain</span><span class="p">;</span>
  <span class="nl">background-position</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="no">black</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">&lt;/style&gt;</span>
<span class="nt">&lt;html&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"refresh"</span> <span class="na">content=</span><span class="s">"900"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>The <code class="language-plaintext highlighter-rouge">&lt;meta http-equiv="refresh" content="900"&gt;</code> ensures that the image is updated every 15 minutes.</p>

<h2 id="the-execution">The Execution</h2>

<p>Now set your wallpaper from a URL. This is easy to do on most machines:</p>

<ul>
  <li><a href="https://www.intowindows.com/how-to-set-a-webpage-as-desktop-background-in-windows-10/">Windows</a></li>
  <li><a href="https://store.kde.org/p/1324580">Linux KDE</a> (this is the one I use)</li>
  <li><a href="https://www.simplehelp.net/2021/07/14/how-to-set-a-web-page-as-the-desktop-background-in-macos/">MacOS</a></li>
  <li><a href="https://letmegooglethat.com/?q=HTML+Wallpaper+For+My+OS">All other OSes</a></li>
</ul>

<h2 id="the-result">The Result</h2>

<p class="centre"><img src="/static/img/2023-04-24_aurora_wallpaper.png" alt="Screenshot of two monitors, one showing the Aurora forecast" class="img-responsive" />
<em>Screenshot of my two monitors (left=landscape, right=potrait) showing the result</em></p>
 ]]></content>
  </entry>

  <entry>
    <title type="text">Useful LaTex One-Liners For Reports/Papers/Etc.</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/useful-latex-one-liners-for-reports-papers-etc.html/?source=RSS" />
    <id>https://janhendrikewers.uk/useful-latex-one-liners-for-reports-papers-etc</id>
    <published>2023-04-19T14:02:00Z</published>
    <updated>2023-04-19T14:02:00Z</updated>
    <content type="html"><![CDATA[ <p>Some useful LaTex one-liners that I’ve accumulated over the years. You can also find these tools <a href="https://gist.github.com/iwishiwasaneagle/2f91f63f3cb0107b94b501aa284a18ca">here</a></p>

<h2 id="show-all-errors-warnings-and-undefined-messages">Show all errors, warnings, and undefined messages</h2>

<p>Very basic but useful to analyse a log file after compilation with location in log file for further analysis</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">grep</span> <span class="nt">-iHEn</span> <span class="s2">"error|warning|undefined"</span> <span class="k">*</span>.log
</code></pre></div></div>

<h2 id="find-all-the-duplicated-labels-in-a-directory">Find all the duplicated labels in a directory</h2>

<p>Useful if referencing a figure results in warnings/errors</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">grep</span> <span class="nt">-ERh</span> <span class="s2">"</span><span class="se">\\\\</span><span class="s2">label</span><span class="se">\{\w</span><span class="s2">*:</span><span class="se">\w</span><span class="s2">*</span><span class="se">\}</span><span class="s2">"</span> <span class="nt">--include</span><span class="o">=</span><span class="s2">"*.tex"</span> <span class="se">\</span>
     | <span class="nb">tr</span> <span class="nt">-d</span> <span class="s2">" "</span> | <span class="nb">sort</span> | <span class="nb">uniq</span> <span class="nt">-c</span> | <span class="nb">awk</span> <span class="s1">'$1&gt;1 {print $0}'</span>
</code></pre></div></div>

<h2 id="validate-referencesbib">Validate references.bib</h2>

<p>We use <a href="https://github.com/Pezmc/BibLatex-Check">Pezmc/BibLatex-Check</a> for this one.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl https://raw.githubusercontent.com/Pezmc/BibLatex-Check/master/biblatex_check.py <span class="se">\ </span>
    2&gt;/dev/null | python - <span class="se">\ </span>
    <span class="nt">-b</span> <span class="si">$(</span>find ./ <span class="nt">-maxdepth</span> 1 <span class="nt">-name</span> <span class="s2">"*.bib"</span> | <span class="nb">head</span> <span class="nt">-n1</span><span class="si">)</span> <span class="se">\ </span>
    <span class="nt">-a</span> <span class="si">$(</span>find ./ <span class="nt">-maxdepth</span> 1 <span class="nt">-name</span> <span class="s2">"*.aux"</span> | <span class="nb">head</span> <span class="nt">-n1</span><span class="si">)</span>
</code></pre></div></div>

<h2 id="find-all-the-unused-labels">Find all the unused labels</h2>

<p>Calling this one a “one-liner” is pushing it, but it’s very useful nonetheless so it’s being included.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">REF</span><span class="o">=(</span><span class="si">$(</span><span class="nv">IFS</span><span class="o">=</span><span class="p">;</span><span class="nb">grep</span> <span class="nt">-ERoh</span> <span class="s2">"</span><span class="se">\\\\\w</span><span class="s2">*ref</span><span class="se">\{\w</span><span class="s2">*:</span><span class="se">\w</span><span class="s2">*</span><span class="se">\}</span><span class="s2">"</span> <span class="nb">.</span> | <span class="nb">sort</span> | <span class="nb">uniq</span> | <span class="nb">awk</span> <span class="nt">-F</span><span class="o">{</span> <span class="s1">'{print $2}'</span> | <span class="nb">tr</span> <span class="nt">-d</span> <span class="s1">'}'</span><span class="si">)</span><span class="o">)</span>
<span class="nv">LABEL</span><span class="o">=(</span><span class="si">$(</span><span class="nv">IFS</span><span class="o">=</span><span class="p">;</span><span class="nb">grep</span> <span class="nt">-ERoh</span> <span class="s2">"</span><span class="se">\\\\</span><span class="s2">label</span><span class="se">\{\w</span><span class="s2">*:</span><span class="se">\w</span><span class="s2">*</span><span class="se">\}</span><span class="s2">"</span> <span class="nb">.</span> | <span class="nb">sort</span> | <span class="nb">uniq</span> | <span class="nb">awk</span> <span class="nt">-F</span><span class="o">{</span> <span class="s1">'{print $2}'</span> | <span class="nb">tr</span> <span class="nt">-d</span> <span class="s1">'}'</span><span class="si">)</span><span class="o">)</span>
<span class="k">for </span>i <span class="k">in</span> <span class="nv">$LABEL</span>
<span class="k">do
    </span><span class="nb">echo</span> <span class="nv">$REF</span> | <span class="nb">grep</span> <span class="nt">-iq</span> <span class="s2">" </span><span class="nv">$i</span><span class="s2"> "</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$?</span> <span class="nt">-eq</span> 1 <span class="o">]]</span>
    <span class="k">then
        </span><span class="nb">printf</span> <span class="s2">"</span><span class="se">\0</span><span class="s2">33[0;31mUNUSED LABEL: </span><span class="se">\0</span><span class="s2">33[0;32m</span><span class="nv">$i</span><span class="se">\0</span><span class="s2">33[0m</span><span class="se">\n</span><span class="s2">"</span>
    <span class="k">fi
done</span>
</code></pre></div></div>

<h2 id="get-document-rough-word-count">Get document (rough) word count</h2>

<p>This doesn’t exclude referencing etc. but accurate enough for rough estimates.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pdftotext main.pdf - | <span class="se">\</span>
    <span class="nb">grep</span> <span class="nt">-ohE</span> <span class="s2">"</span><span class="se">\b</span><span class="s2">[a-zA-Z]{2,}</span><span class="se">\b</span><span class="s2">"</span> | <span class="se">\</span>
    <span class="nb">tr</span> <span class="s1">'[:upper:]'</span> <span class="s1">'[:lower:]'</span> | <span class="se">\</span>
    <span class="nb">sort</span> | <span class="nb">uniq</span> <span class="o">&gt;</span> /tmp/words.txt<span class="p">;</span> pdftotext main.pdf - | <span class="se">\</span>
    <span class="nb">grep</span> <span class="nt">-ohFf</span> /tmp/words.txt | <span class="nb">wc</span> <span class="nt">-w</span>
</code></pre></div></div>

<h2 id="spell-check">Spell check</h2>

<p>Requires <code class="language-plaintext highlighter-rouge">aspell-en</code>.</p>

<ol>
  <li>Non-interactive - list of misspelled words
    <ul>
      <li><code class="language-plaintext highlighter-rouge">pdftotext main.pdf - | grep -ohE "\b[a-zA-Z]{2,}\b" | tr '[:upper:]' '[:lower:]' | sort | uniq | aspell list -t | sort | uniq -c</code></li>
    </ul>
  </li>
  <li>Interactive spell-check - file by file
    <ul>
      <li><code class="language-plaintext highlighter-rouge">aspell -c -t main.tex # Replace main.tex with whatever tex file you're checking</code></li>
    </ul>
  </li>
</ol>
 ]]></content>
  </entry>

  <entry>
    <title type="text">Easier Jekyll Post Creation Using jekyll-compose</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/easier-jekyll-post-creation-using-jekyll-compose.html/?source=RSS" />
    <id>https://janhendrikewers.uk/easier-jekyll-post-creation-using-jekyll-compose</id>
    <published>2023-04-19T12:53:00Z</published>
    <updated>2023-04-19T12:53:00Z</updated>
    <content type="html"><![CDATA[ <p>Today I learned about a handy tool for jekyll called <a href="https://github.com/jekyll/jekyll-compose">jekyll-compose</a>. This lets you automatically create post and draft files for jekyll with <strong>generated front-matter</strong>. This is a really cool tool and I’d reccommend anyone using jekyll to have a look!</p>

<p>Is it going to save you time? Probably not. Does it remove the nuissance of manually creating posts, and moving drafts about? Yes! What a treat.</p>

<h2 id="installation">Installation</h2>

<p>Add this to your <code class="language-plaintext highlighter-rouge">Gemfile</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">group</span> <span class="ss">:jekyll_plugins</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'jekyll-compose'</span>
<span class="k">end</span>
</code></pre></div></div>

<p>and run <code class="language-plaintext highlighter-rouge">bundle install</code></p>
 ]]></content>
  </entry>

  <entry>
    <title type="text">Hosting Plausible Analytics On A Raspberry Pi 4 with SSL</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/plausible_analytics_on_a_raspberry_pi_with_SSL.html/?source=RSS" />
    <id>https://janhendrikewers.uk/plausible_analytics_on_a_raspberry_pi_with_SSL</id>
    <published>2023-04-19T00:00:00Z</published>
    <updated>2023-04-19T00:00:00Z</updated>
    <content type="html"><![CDATA[ <p>Plausible is a great alternative to Google Analytics if you want to havbe the option of analytics but actually respect your users privacy. Along with that bold statement, Plausible actually offers a whole range of benefits:</p>

<ul>
  <li>Guaranteed to be in the region you expect it to be
    <ul>
      <li>EU if not self-hosted, else whereever you desire</li>
      <li>This is especially true for GDPR and other data collection laws</li>
    </ul>
  </li>
  <li><a href="https://plausible.io/lightweight-web-analytics#how-do-web-analytics-scripts-affect-the-page-size-and-page-load-time">Substantially lower script size</a> for faster loading times</li>
  <li>No cookie tracking or other invasive methods used</li>
</ul>

<p>Now, the fine folks at Plausible have already created amazing documentation on how to get up and running with <a href="https://github.com/plausible/hosting/tree/master">plausible/hosting</a>. However, this uses an outdated docker image that does not support the Raspberry Pi 4. Therefore, we have this wee guide!</p>

<h2 id="step-1-the-config-repo">Step 1: The Config Repo</h2>

<p>As mentioned above, the original repo does not truly support the RPi4, and until <a href="https://github.com/plausible/hosting/pull/70">PR#70</a> is merged, you can get a working configuration at my fork: <a href="https://github.com/iwishiwasaneagle/plausible-hosting-rpi">iwishiwasaneagle/plausible-hosting-rpi</a></p>

<h2 id="step-2-run-it">Step 2: Run it!</h2>

<p>This is simple, <code class="language-plaintext highlighter-rouge">cd</code> into the directory, follow the steps <a href="https://plausible.io/docs/self-hosting#2-add-required-configuration">here</a> to generate a random secret key, and run <code class="language-plaintext highlighter-rouge">docker compose up -d</code></p>

<p>Is that it? Well, technically yes but also no. First of all, head to <code class="language-plaintext highlighter-rouge">http://localhost:8000</code> and this should outline some issues. Plausible is running perfectly but on <code class="language-plaintext highlighter-rouge">localhost</code> and without SSL. This means you won’t be able to integrate Plausible into your website in any meaningful manner, and not securely.</p>

<h2 id="step-3-the-rest-of-the-owl">Step 3. The Rest Of The Owl</h2>

<p>So, we now have a working instance accessible at <code class="language-plaintext highlighter-rouge">http://localhost:8000</code>. You either need a static IP and a DNS A or AAAA listing pointing at it, ooooor a dynamicDNS service like <a href="https://duckdns.org">DuckDNS</a>. There are millions of resources out there on how to set this up so I won’t bother.</p>

<p>Make sure you have your port <code class="language-plaintext highlighter-rouge">80</code> (HTTP) and <code class="language-plaintext highlighter-rouge">443</code> (HTTPS) forwarded (again, millions of tutorials, beyond the scope of this tutorial, blah blah blah) to your Raspberry Pi’s local IP address. This is critical to get your SSL certificate.</p>

<p>We will now edit our <code class="language-plaintext highlighter-rouge">docker-compose.yml</code> to look like:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s2">"</span><span class="s">3.3"</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="na">mail</span><span class="pi">:</span>
    <span class="na">build</span><span class="pi">:</span> <span class="s">docker-smtp/latest</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">internal</span>

  <span class="na">plausible_db</span><span class="pi">:</span>
    <span class="c1"># supported versions are 12, 13, and 14</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">postgres:14-alpine</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">internal</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db-data:/var/lib/postgresql/data</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">POSTGRES_PASSWORD=postgres</span>

  <span class="na">plausible_events_db</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">clickhouse/clickhouse-server:22.6-alpine</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">internal</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">event-data:/var/lib/clickhouse</span>
      <span class="pi">-</span> <span class="s">./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro</span>
      <span class="pi">-</span> <span class="s">./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro</span>
    <span class="na">ulimits</span><span class="pi">:</span>
      <span class="na">nofile</span><span class="pi">:</span>
        <span class="na">soft</span><span class="pi">:</span> <span class="m">262144</span>
        <span class="na">hard</span><span class="pi">:</span> <span class="m">262144</span>

  <span class="na">plausible</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">plausible/analytics:v1.5</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">sh -c "sleep 10 &amp;&amp; /entrypoint.sh db createdb &amp;&amp; /entrypoint.sh db migrate &amp;&amp; /entrypoint.sh run"</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">expose</span>
      <span class="pi">-</span> <span class="s">internal</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">plausible_db</span>
      <span class="pi">-</span> <span class="s">plausible_events_db</span>
      <span class="pi">-</span> <span class="s">mail</span>
    <span class="na">env_file</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">plausible-conf.env</span>
  
  <span class="na">nginx</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">nginx</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./nginx/:/etc/nginx/conf.d</span>
      <span class="pi">-</span> <span class="s">./data/certbot/conf:/etc/letsencrypt</span>
      <span class="pi">-</span> <span class="s">./data/certbot/www:/var/www/certbot</span>
      <span class="pi">-</span> <span class="s">./nginx/error.log:/var/log/nginx/error.log</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">expose</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">80:80</span>
      <span class="pi">-</span> <span class="s">443:443</span>
    <span class="na">environment</span><span class="pi">:</span>
     <span class="pi">-</span> <span class="s">NGINX_HOST=127.0.0.1</span>
     <span class="pi">-</span> <span class="s">NGINX_PORT=80</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/bin/sh</span><span class="nv"> </span><span class="s">-c</span><span class="nv"> </span><span class="s">'while</span><span class="nv"> </span><span class="s">:;</span><span class="nv"> </span><span class="s">do</span><span class="nv"> </span><span class="s">sleep</span><span class="nv"> </span><span class="s">6h</span><span class="nv"> </span><span class="s">&amp;</span><span class="nv"> </span><span class="s">wait</span><span class="nv"> </span><span class="s">$${!};</span><span class="nv"> </span><span class="s">nginx</span><span class="nv"> </span><span class="s">-s</span><span class="nv"> </span><span class="s">reload;</span><span class="nv"> </span><span class="s">done</span><span class="nv"> </span><span class="s">&amp;</span><span class="nv"> </span><span class="s">nginx</span><span class="nv"> </span><span class="s">-g</span><span class="nv"> </span><span class="se">\"</span><span class="s">daemon</span><span class="nv"> </span><span class="s">off;</span><span class="se">\"</span><span class="s">'"</span>

  <span class="na">certbot</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">certbot/certbot</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./data/certbot/conf:/etc/letsencrypt</span>
      <span class="pi">-</span> <span class="s">./data/certbot/www:/var/www/certbot</span>
    <span class="na">entrypoint</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/bin/sh</span><span class="nv"> </span><span class="s">-c</span><span class="nv"> </span><span class="s">'trap</span><span class="nv"> </span><span class="s">exit</span><span class="nv"> </span><span class="s">TERM;</span><span class="nv"> </span><span class="s">while</span><span class="nv"> </span><span class="s">:;</span><span class="nv"> </span><span class="s">do</span><span class="nv"> </span><span class="s">certbot</span><span class="nv"> </span><span class="s">renew;</span><span class="nv"> </span><span class="s">sleep</span><span class="nv"> </span><span class="s">12h</span><span class="nv"> </span><span class="s">&amp;</span><span class="nv"> </span><span class="s">wait</span><span class="nv"> </span><span class="s">$${!};</span><span class="nv"> </span><span class="s">done;'"</span>

<span class="na">volumes</span><span class="pi">:</span>
  <span class="na">db-data</span><span class="pi">:</span>
    <span class="na">driver</span><span class="pi">:</span> <span class="s">local</span>
  <span class="na">event-data</span><span class="pi">:</span>
    <span class="na">driver</span><span class="pi">:</span> <span class="s">local</span>
  <span class="na">geoip</span><span class="pi">:</span>
    <span class="na">driver</span><span class="pi">:</span> <span class="s">local</span>
  
<span class="na">networks</span><span class="pi">:</span>
  <span class="na">expose</span><span class="pi">:</span>
  <span class="na">internal</span><span class="pi">:</span>
</code></pre></div></div>

<p>The correct usage of the networks us key, otherwise the <code class="language-plaintext highlighter-rouge">nginx</code> container can’t access <code class="language-plaintext highlighter-rouge">plausible</code> which then won’t be accessible over the internet. Now <code class="language-plaintext highlighter-rouge">mkdir</code> two directories: <code class="language-plaintext highlighter-rouge">nginx</code> and <code class="language-plaintext highlighter-rouge">data</code>, and create the following file at <code class="language-plaintext highlighter-rouge">nginx/plausible.conf</code>:</p>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">server</span> <span class="p">{</span>
    <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
    <span class="kn">listen</span> <span class="s">[::]:80</span><span class="p">;</span>

    <span class="kn">location</span> <span class="n">/.well-known/acme-challenge/</span> <span class="p">{</span>
      <span class="kn">root</span> <span class="n">/var/www/certbot</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kn">location</span> <span class="n">/</span> <span class="p">{</span>
        <span class="kn">return</span> <span class="mi">301</span> <span class="s">https://</span><span class="nv">$host$request_uri</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kn">server_name</span> <span class="s">_</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">server</span> <span class="p">{</span>
    <span class="kn">listen</span> <span class="mi">443</span> <span class="s">ssl</span><span class="p">;</span>
    <span class="kn">listen</span> <span class="s">[::]:443</span> <span class="s">ssl</span><span class="p">;</span>
    <span class="kn">server_name</span> <span class="s">yourdomain.com</span><span class="p">;</span>

    <span class="kn">ssl_certificate</span> <span class="n">/etc/letsencrypt/live/yourdomain.com/fullchain.pem</span><span class="p">;</span>
    <span class="kn">ssl_certificate_key</span> <span class="n">/etc/letsencrypt/live/yourdomain.com/privkey.pem</span><span class="p">;</span>
    <span class="kn">include</span> <span class="n">/etc/letsencrypt/options-ssl-nginx.conf</span><span class="p">;</span>
    <span class="kn">ssl_dhparam</span> <span class="n">/etc/letsencrypt/ssl-dhparams.pem</span><span class="p">;</span>

    <span class="kn">location</span> <span class="n">/</span> <span class="p">{</span>
        <span class="kn">proxy_pass</span> <span class="s">http://plausible:8000</span><span class="p">;</span>
        <span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-For</span> <span class="nv">$proxy_add_x_forwarded_for</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<p>It is now time to get your SSL certificate and to enable HTTPS on your Plausible instance. Download the <a href="https://github.com/wmnnd/nginx-certbot/blob/master/init-letsencrypt.sh"><code class="language-plaintext highlighter-rouge">init-letsencrypt.sh</code></a> and edit it to include your your domain name. Give it execution permissions via</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x init-letsencrupt.sh
</code></pre></div></div>

<p>and run it!</p>

<blockquote>
  <p>Be sure to change <code class="language-plaintext highlighter-rouge">BASE_URL</code> within <code class="language-plaintext highlighter-rouge">plausible-conf.env</code> to whatever yours is for Plausible to play nicely.</p>
</blockquote>

<h2 id="step-4-add-scriptjs-to-your-head">Step 4. Add script.js To Your <code class="language-plaintext highlighter-rouge">&lt;head&gt;</code></h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">defer</span> <span class="na">data-domain=</span><span class="s">"yourdomain.com"</span> <span class="na">src=</span><span class="s">"https://yourdomain.com/js/script.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<p>If you are self-hsoting, which is probably why you’re reading this, it is important in my opinion that you <strong>DO NOT</strong> use the script located at <code class="language-plaintext highlighter-rouge">https://https://plausible.io/js/script.js</code>. You are not paying for any bandwidth, and therefore shouldn’t be freeloading. Use Cloudflare or another CDN if your private bandwidth is a concern.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Plausible was really simple to set up in workflow and I hope this guide has helped you. There are additional things you can consider doing which I’ll link below.
What I really appreciate about Plausible is not invading the privacy of the people visiting my website, whilst still giving me insight as to what is going on.</p>

<h2 id="additional-tips">Additional Tips</h2>

<ul>
  <li>Set <code class="language-plaintext highlighter-rouge">DISABLE_REGISTRATION=invite_only</code> to disable others from freely creating accounts</li>
  <li><a href="https://plausible.io/docs/script-extensions">Enable other extensions</a></li>
  <li><a href="https://plausible.io/docs/integration-guides">Use an integration</a></li>
  <li><a href="https://plausible.io/docs/goal-conversions">Set up goals and custom events</a></li>
</ul>
 ]]></content>
  </entry>

  <entry>
    <title type="text">How Your Psychological Profile Is Used In A Mountain Rescue Search</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/how_your_psychological_profile_is_used_in_a_mountain_rescue_search.html/?source=RSS" />
    <id>https://janhendrikewers.uk/how_your_psychological_profile_is_used_in_a_mountain_rescue_search</id>
    <published>2023-03-07T00:00:00Z</published>
    <updated>2023-03-07T00:00:00Z</updated>
    <content type="html"><![CDATA[ <p>When you (or actually, anyone) gets lost in the mountains, a group of experts get called out with one task: find you, and get you back to safety. They use a myriad of tools to do this, with the one we’ll focus on in this post being <strong>data</strong>.</p>

<hr />

<blockquote>
  <p><em>Note: I’m not a mountain rescue expert, so everything written here should be taken with a pinch of salt.</em></p>
</blockquote>

<hr />

<p>You may not know this, but lost people behave massively different based on their gender, age, health, and current activity. We know this from historical data gathered over hundreds of Search and Rescue (SAR) incidents carefully catalogued and processed by various groups (<a href="https://www.scottishmountainrescue.org/">SMR</a>, <a href="https://www.mountain.rescue.org.uk/">EWMR</a>, Police, <a href="https://www.dbs-sar.com/SAR_Research/ISRID.htm">ISRID</a>, etc.). This data is usually very top-level, like how long they were travelling for, where they were found, how far from a road were they found, etc.</p>

<p>Using this, we can construct a model that matches as closely as possible to the data and through this predict where a person might be found from a report last place seen (LPS). This model may not be anything formal, but rather to inform the search leader about where their searches need to look. If profile A is likely to be near a lake, then look near the lake! If profile B is highly likely to not travel longer than 5 hours, restrict your search area.</p>

<p>One data source that is commonly used throughout the UK is the <em>UK Missing Person Behaviour Study</em> <sup id="fnref:fn2" role="doc-noteref"><a href="#fn:fn2" class="footnote" rel="footnote">1</a></sup>. This tells us that <em>Children aged 1 to 16 years</em> have a $52\%$ chance of being found near building, and in comparison a person suffering from <em>Dementia</em> is only found near buildings $26\%$ of the time<sup id="fnref:fn1" role="doc-noteref"><a href="#fn:fn1" class="footnote" rel="footnote">2</a></sup>.</p>

<p>A caveat to this is that it’s important to make the distinction between environment types. Someone lost in the Scottish Highlands will have a much harder time traversing the terrain, than someone lost in Yorkshire. As well as this, there is usually no distinction made on time-of-day or the weather conditions In the data. However, through chatting to mountain rescue experts from the Lake District<sup id="fnref:fn3" role="doc-noteref"><a href="#fn:fn3" class="footnote" rel="footnote">3</a></sup>, they automatically search down-wind from the LPS as <em>who in their right mind walks into the wind when they’re already struggling to locate themselves or injured</em>.</p>

<p>Whilst you may never use this information, I find it really interesting to know what tools are being used by the experts saving lives. My current research is in the field of predicting and searching for lost people using <a href="https://github.com/iwishiwasaneagle/jdrones">drones</a>, so it’s nice to share a niche slice of my work.</p>

<hr />

<blockquote>
  <p><strong>N.B. (1)</strong>: The mountains are a beautiful, yet dangerous place. Mountain rescuers literally put their life on line to help people on the regular with (usually) no compensation. In Scotland, the individual teams rely on donations as the funding from the government is marginal. So please be careful and don’t take their efforts for granted.</p>

  <p><strong>N.B. (2):</strong> If this blog post piqued your interest about the niche that is mountain rescue, the book <em>Cairngorm John: a Life in Mountain Rescue</em> by John Allen is a fascinating insight into how search and rescue scenarios play out.</p>
</blockquote>

<hr />

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:fn2" role="doc-endnote">
      <p>D. Perkins, P. Roberts, G. Feeney, and P. Mrt, ‘The U.K. Missing Person Behaviour Study’, CSR, 2011, [Online]. Available: <a href="https://tcsr.org.uk/media/kushuk1a/uk-missing-person-behaviour-study-2011.pdf">https://tcsr.org.uk/media/kushuk1a/uk-missing-person-behaviour-study-2011.pdf</a> <a href="#fnref:fn2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:fn1" role="doc-endnote">
      <p>This is for the <em>farmland</em> terrain, and <em>female</em> gender for the dementia category. The child 1-16 category does not report on gender. <a href="#fnref:fn1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:fn3" role="doc-endnote">
      <p>Fun fact: Lake District Mountain Rescue don’t just search for humans, but animals too! <a href="#fnref:fn3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
 ]]></content>
  </entry>

  <entry>
    <title type="text">Pip Install From Private GitHub Repos</title>
    <link rel="alternate" type="text/html" href="https://janhendrikewers.uk/pip_install_from_private_repos.html/?source=RSS" />
    <id>https://janhendrikewers.uk/pip_install_from_private_repos</id>
    <published>2023-02-07T00:00:00Z</published>
    <updated>2023-02-07T00:00:00Z</updated>
    <content type="html"><![CDATA[ <p>I’m currently working on a <a href="https://github.com/iwishiwasaneagle/jdrones">library</a> that I’m not quite ready yet to open source. I use it for research, and as such need to be able to install it on other machines. Originally I was just cloning the repo and setting <code class="language-plaintext highlighter-rouge">PYTHONPATH</code> everywhere but this quickly became cumbersome. Below are the methods that I’ve discovered to install the library.</p>

<h2 id="https">HTTPS</h2>

<p>So you don’t want to set up SSH with a private key and all that jazz. Simply have a look at <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token">this</a> guide to create a private access token (PAT) with <strong>read</strong> access to the private repo.</p>

<p>Then run the following</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install </span>git+https://<span class="nv">$USERNAME</span>:<span class="nv">$PAT</span>@github.com/<span class="nv">$GH_USER</span>/<span class="nv">$REPO</span>.git@<span class="nv">$VERSION</span>
</code></pre></div></div>

<p>Some other guides online either omit the $USERNAME because it’s a new requirement or it used to work, but this is the only way it works for me these days <strong>without</strong> asking for my password.</p>

<h2 id="ssh">SSH</h2>

<p>This is by far the easiest method, but it does require that <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh">SSH is linked to your github account</a>. If SSH is correctly set up, then run the following</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install </span>git+ssh://git@github.com/<span class="nv">$GH_USER</span>/<span class="nv">$REPO</span>.git@<span class="nv">$VERSION</span>
</code></pre></div></div>

<h2 id="extra-info">Extra Info</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">$VERSION</code> can be a branch or tag</li>
  <li>PATs should <strong>always</strong> have the <strong>minimum</strong> permissions possible
    <ul>
      <li>GitHub’s new <a href="https://github.com/settings/tokens?type=beta">fine-grained tokens</a> give you per-repo control</li>
    </ul>
  </li>
  <li>Treat your PATs like a password. DO NOT SHARE</li>
</ul>
 ]]></content>
  </entry>


</feed>
